version: 2.1
orbs:
  slack: circleci/slack@3.4.2
  shellcheck: circleci/shellcheck@2.0.0
jobs:
  build-and-test:
    docker:
      - image: reachsh/reach-circle:v0.1.1
    steps:
      - checkout
      - run:
          name: render docs
          command: (cd docs-src && make render)
      - store_artifacts:
          path: docs/
      - run:
          name: render todo
          command: |
            # XXX move into docker container
            apt-get update && apt-get install -y silversearcher-ag aha
            make todo
      - store_artifacts:
          path: todo.html
      - restore_cache:
          keys:
            - hs-2-{{ checksum "hs/stack.yaml" }}-{{ checksum "hs/package.yaml" }}
            - hs-2-{{ checksum "hs/stack.yaml" }}
            - hs-2-
            - hs-
      - run:
          name: install hs dependencies
          command: (cd hs && make hs-deps)
      - save_cache:
          key: hs-2-{{ checksum "hs/stack.yaml" }}-{{ checksum "hs/package.yaml" }}
          paths:
            - /root/.stack
            - hs/.stack_work
      - run:
          name: clean hs
          command: (cd hs && make hs-clean)
      - run:
          name: build hs
          command: (cd hs && make hs-build)
      - run:
          name: test hs (xml)
          command: (cd hs && make hs-test-xml)
      - store_test_results:
          path: hs/test-reports
      # Annoyingly, can't run html and xml reports simultaneously.
      # https://stackoverflow.com/questions/63022817/tasty-xml-and-html-generation
      - run:
          name: test hs (html)
          command: (cd hs && make hs-test-html)
      - store_artifacts:
          path: hs/test-reports/results.html
      - run:
          name: check hs
          command: (cd hs && make hs-check)
      - store_artifacts:
          path: hs/stan.html

      - setup_remote_docker
      - run:
          name: build ethereum-devnet
          command: (cd scripts/ethereum-devnet && make build)
      - run:
          name: build and test js
          command: (cd js && make build test)
      - run:
          name: rebuild examples
          command: (cd examples && make clean-all build-all)
      - run:
          name: run examples
          command: (cd examples && make run-all)
          no_output_timeout: 1m
      - run:
          name: copy docs to workspace
          command: |
            mkdir -p /tmp/workspace
            cp -r docs /tmp/workspace/
            cp -r hs/test-reports /tmp/workspace/docs/
            mkdir -p /tmp/workspace/docs/linter-reports/
            cp hs/stan.html /tmp/workspace/docs/linter-reports/
            cp todo.html /tmp/workspace/docs/linter-reports/
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - docs
      - slack/status:
          fail_only: true

  docs-deploy:
    docker:
      - image: circleci/node:9.9.0
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Install and configure dependencies
          # gh-pages@3.0.0, not 3.1.0, because:
          # https://github.com/tschaub/gh-pages/issues/354#issuecomment-647801438
          command: |
            # sudo npm install -g --silent gh-pages@3.0.0
            git config user.email "ci-build@reach.sh"
            git config user.name "ci-build"
      - add_ssh_keys:
          fingerprints:
            - "b5:65:6d:49:4f:fb:c1:77:2c:13:45:b1:d9:f9:71:c6"
      - run:
          name: Deploy docs to gh-pages branch
          command: |
            git fetch origin gh-pages
            git checkout gh-pages
            git pull origin gh-pages
            git rm -r .
            cp -r /tmp/workspace/docs/* .
            git add .
            git commit -m "[ci skip] docs for $CIRCLE_SHA1"
            git push origin gh-pages
      - slack/status:
          fail_only: true
  shellcheck:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - checkout
      - shellcheck/install
      - run:
          name: Run shellcheck
          command: make sh-lint

workflows:
  build-and-test:
    jobs:
      - build-and-test
      - docs-deploy:
          requires:
            - build-and-test
          filters:
            branches:
              only: master
  shellcheck:
    jobs:
      - shellcheck
